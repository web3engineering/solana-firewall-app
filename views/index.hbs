<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{pageTitle}}</title>
    <link rel="stylesheet" href="/css/main.css">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto+Mono:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="stars-bg"></div>
    <div class="twinkling-bg"></div>
    <div class="container">
        <header>
            <h1>{{welcomeMessage}}</h1>
            <nav>
                {{#if isAuthenticated}}
                    <a href="/rules" class="nav-link">Manage Rules</a>
                    <form action="/auth/logout" method="post" style="display: inline;">
                        <button type="submit" class="nav-link logout-button">Logout</button>
                    </form>
                {{else}}
                    <a href="/auth/login" class="nav-link">Login</a>
                {{/if}}
            </nav>
        </header>

        <main>
            <section class="info-card">
                <h2>Node Endpoints</h2>
                <div class="endpoint-group">
                    <label for="rpc-url">RPC URL:</label>
                    <div class="copyable-text">
                        <pre id="rpc-url">RPC_URL=http://{{currentIp}}:{{rpcPort}}</pre>
                        <button class="copy-button" onclick="copyToClipboard('rpc-url')">Copy</button>
                    </div>
                </div>
                <div class="endpoint-group">
                    <label for="geyser-url">Geyser URL:</label>
                    <div class="copyable-text">
                        <pre id="geyser-url">GEYSER_URL=http://{{currentIp}}:{{geyserPort}}</pre>
                        <button class="copy-button" onclick="copyToClipboard('geyser-url')">Copy</button>
                    </div>
                </div>
            </section>

            <section class="info-card ip-check-section">
                <h2>Check IP Access Status</h2>
                <form id="ip-check-form">
                    <div class="form-group">
                        <label for="ip-check-input">IP Address:</label>
                        <input type="text" id="ip-check-input" name="ip" placeholder="Enter IP to check" required pattern="(?:[0-9]{1,3}\.){3}[0-9]{1,3}" title="Enter a valid IPv4 address">
                    </div>
                    <button type="submit" id="ip-check-button" class="submit-button">Check Status</button>
                </form>
                <div id="ip-check-results" class="results-area" style="display: none;">
                    <p>Status for IP: <strong id="checked-ip-display"></strong></p>
                    <div class="status-item">
                        <div class="status-indicator" id="rpc-status-indicator"></div>
                        <span id="rpc-status-text">RPC Port ({{rpcPort}})</span>
                    </div>
                    <div class="status-item">
                        <div class="status-indicator" id="geyser-status-indicator"></div>
                        <span id="geyser-status-text">Geyser Port ({{geyserPort}})</span>
                    </div>
                    <p id="ip-check-error" class="error-message" style="display: none;"></p>
                </div>
            </section>
        </main>

        <footer>
            <p>&copy; 2024 Diver's Node Operations. All systems nominal.</p>
        </footer>
    </div>

    <script>
        function copyToClipboard(elementId) {
            const textToCopy = document.getElementById(elementId).innerText;
            navigator.clipboard.writeText(textToCopy).then(() => {
                // Optional: Show a temporary message like "Copied!"
                console.log(elementId + ' copied to clipboard');
            }).catch(err => {
                console.error('Failed to copy: ', err);
            });
        }

        const ipCheckForm = document.getElementById('ip-check-form');
        const ipCheckInput = document.getElementById('ip-check-input');
        const ipCheckResultsDiv = document.getElementById('ip-check-results');
        const checkedIpDisplay = document.getElementById('checked-ip-display');
        const rpcStatusIndicator = document.getElementById('rpc-status-indicator');
        const geyserStatusIndicator = document.getElementById('geyser-status-indicator');
        const rpcStatusText = document.getElementById('rpc-status-text'); // To update with actual port if needed
        const geyserStatusText = document.getElementById('geyser-status-text'); // To update with actual port if needed
        const ipCheckError = document.getElementById('ip-check-error');

        if (ipCheckForm) {
            ipCheckForm.addEventListener('submit', async function(event) {
                event.preventDefault();
                const ipToQuery = ipCheckInput.value;
                
                // Clear previous results and error
                ipCheckResultsDiv.style.display = 'none';
                rpcStatusIndicator.className = 'status-indicator'; // Reset classes
                geyserStatusIndicator.className = 'status-indicator'; // Reset classes
                ipCheckError.style.display = 'none';
                ipCheckError.textContent = '';

                if (!ipToQuery) return;

                try {
                    const response = await fetch('/check-ip', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ ip: ipToQuery }),
                    });

                    checkedIpDisplay.textContent = ipToQuery;
                    ipCheckResultsDiv.style.display = 'block';

                    if (!response.ok) {
                        const errorData = await response.json().catch(() => ({ message: 'Failed to check IP. Please try again.' }));
                        throw new Error(errorData.message || `Server error: ${response.status}`);
                    }

                    const data = await response.json();

                    // Update RPC status text if not already dynamic via Handlebars (it is, so this is for confirmation)
                    // rpcStatusText.textContent = `RPC Port (${data.rpcPort})`;
                    // geyserStatusText.textContent = `Geyser Port (${data.geyserPort})`;

                    updateIndicator(rpcStatusIndicator, data.rpcPortAccess);
                    updateIndicator(geyserStatusIndicator, data.geyserPortAccess);

                } catch (error) {
                    console.error('Error checking IP status:', error);
                    ipCheckError.textContent = error.message || 'An unexpected error occurred.';
                    ipCheckError.style.display = 'block';
                    ipCheckResultsDiv.style.display = 'block'; // Show results area to display error
                }
            });
        }

        function updateIndicator(indicatorElement, hasAccess) {
            indicatorElement.classList.remove('green', 'red', 'blinking'); // Clear previous state
            if (hasAccess) {
                indicatorElement.classList.add('green', 'blinking');
            } else {
                indicatorElement.classList.add('red');
            }
        }
    </script>
</body>
</html> 